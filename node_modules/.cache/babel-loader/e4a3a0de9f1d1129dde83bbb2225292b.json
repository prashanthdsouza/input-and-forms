{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\input-and-forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('Name Input is valid!');\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n\n    setEnteredName('');\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"NpBdDjtGXxwhrEFo1Ma3zaY+Jak=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","trim","enteredValue","current","nameInputIsInvalid","nameInputClasses"],"sources":["C:/Users/hp/Desktop/input-and-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nconst SimpleInput = (props) => {\r\n  const nameInputRef = useRef();\r\n  const [enteredName, setEnteredName] = useState('');\r\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\r\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (enteredNameIsValid) {\r\n      console.log('Name Input is valid!');\r\n    }\r\n  }, [enteredNameIsValid]);\r\n\r\n  const nameInputChangeHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const nameInputBlurHandler = event => {\r\n    setEnteredNameTouched(true);\r\n  }\r\n\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    setEnteredNameTouched(true);\r\n\r\n    if (enteredName.trim() === '') {\r\n      setEnteredNameIsValid(false);\r\n      return;\r\n    }\r\n\r\n    setEnteredNameIsValid(true);\r\n\r\n    console.log(enteredName);\r\n\r\n    const enteredValue = nameInputRef.current.value;\r\n    console.log(enteredValue);\r\n\r\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\r\n    setEnteredName('');\r\n  };\r\n\r\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n  const nameInputClasses = nameInputIsInvalid\r\n    ? 'form-control invalid'\r\n    : 'form-control';\r\n\r\n  return (\r\n    <form onSubmit={formSubmissionHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input\r\n          ref={nameInputRef}\r\n          type='text'\r\n          id='name'\r\n          onChange={nameInputChangeHandler}\r\n          onBlur={nameInputBlurHandler}\r\n          value={enteredName}\r\n        />\r\n        {nameInputIsInvalid && (\r\n          <p className='error-text'>Name must not be empty.</p>\r\n        )}\r\n      </div>\r\n      <div className='form-actions'>\r\n        <button>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGJ,MAAM,EAA3B;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;EAEAF,SAAS,CAAC,MAAM;IACd,IAAIQ,kBAAJ,EAAwB;MACtBI,OAAO,CAACC,GAAR,CAAY,sBAAZ;IACD;EACF,CAJQ,EAIN,CAACL,kBAAD,CAJM,CAAT;;EAMA,MAAMM,sBAAsB,GAAIC,KAAD,IAAW;IACxCR,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,oBAAoB,GAAGH,KAAK,IAAI;IACpCJ,qBAAqB,CAAC,IAAD,CAArB;EACD,CAFD;;EAIA,MAAMQ,qBAAqB,GAAIJ,KAAD,IAAW;IACvCA,KAAK,CAACK,cAAN;IAEAT,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAIL,WAAW,CAACe,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BZ,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IAEDA,qBAAqB,CAAC,IAAD,CAArB;IAEAG,OAAO,CAACC,GAAR,CAAYP,WAAZ;IAEA,MAAMgB,YAAY,GAAGjB,YAAY,CAACkB,OAAb,CAAqBN,KAA1C;IACAL,OAAO,CAACC,GAAR,CAAYS,YAAZ,EAfuC,CAiBvC;;IACAf,cAAc,CAAC,EAAD,CAAd;EACD,CAnBD;;EAqBA,MAAMiB,kBAAkB,GAAG,CAAChB,kBAAD,IAAuBE,kBAAlD;EAEA,MAAMe,gBAAgB,GAAGD,kBAAkB,GACvC,sBADuC,GAEvC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEL,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEM,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAEpB,YADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAES,sBAJZ;QAKE,MAAM,EAAEI,oBALV;QAME,KAAK,EAAEZ;MANT;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGkB,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CApED;;GAAMrB,W;;KAAAA,W;AAsEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}