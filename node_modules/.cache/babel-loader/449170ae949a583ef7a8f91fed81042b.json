{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\input-and-forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (event.target.value.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName); // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"LgiCUeBZKlto+n6NHgnrvDwlEEY=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputChangeHandler","event","target","value","setEnteredNameIsValid","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputIsInvalid","nameInputClasses"],"sources":["C:/Users/hp/Desktop/input-and-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst SimpleInput = (props) => {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n\r\n  const enteredNameIsValid = enteredName.trim() !== ''\r\n\r\n  const nameInputChangeHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n\r\n    if (event.target.value.trim() !== \"\") {\r\n      setEnteredNameIsValid(true);\r\n    }\r\n  };\r\n\r\n  const nameInputBlurHandler = (event) => {\r\n    setEnteredNameTouched(true);\r\n\r\n    if (enteredName.trim() === \"\") {\r\n      setEnteredNameIsValid(false);\r\n    }\r\n  };\r\n\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    setEnteredNameTouched(true);\r\n\r\n    if (enteredName.trim() === \"\") {\r\n      setEnteredNameIsValid(false);\r\n      return;\r\n    }\r\n\r\n    setEnteredNameIsValid(true);\r\n\r\n    console.log(enteredName);\r\n\r\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\r\n    setEnteredName(\"\");\r\n  };\r\n\r\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n  const nameInputClasses = nameInputIsInvalid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  return (\r\n    <form onSubmit={formSubmissionHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameInputChangeHandler}\r\n          onBlur={nameInputBlurHandler}\r\n          value={enteredName}\r\n        />\r\n        {nameInputIsInvalid && (\r\n          <p className=\"error-text\">Name must not be empty.</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;EAEA,MAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD;;EAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;IACxCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;IAEA,IAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBJ,IAAnB,OAA8B,EAAlC,EAAsC;MACpCK,qBAAqB,CAAC,IAAD,CAArB;IACD;EACF,CAND;;EAQA,MAAMC,oBAAoB,GAAIJ,KAAD,IAAW;IACtCJ,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAIH,WAAW,CAACK,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BK,qBAAqB,CAAC,KAAD,CAArB;IACD;EACF,CAND;;EAQA,MAAME,qBAAqB,GAAIL,KAAD,IAAW;IACvCA,KAAK,CAACM,cAAN;IAEAV,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAIH,WAAW,CAACK,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BK,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IAEDA,qBAAqB,CAAC,IAAD,CAArB;IAEAI,OAAO,CAACC,GAAR,CAAYf,WAAZ,EAZuC,CAcvC;;IACAC,cAAc,CAAC,EAAD,CAAd;EACD,CAhBD;;EAkBA,MAAMe,kBAAkB,GAAG,CAACZ,kBAAD,IAAuBF,kBAAlD;EAEA,MAAMe,gBAAgB,GAAGD,kBAAkB,GACvC,sBADuC,GAEvC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEJ,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEK,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAEX,sBAHZ;QAIE,MAAM,EAAEK,oBAJV;QAKE,KAAK,EAAEX;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGgB,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAlED;;GAAMlB,W;;KAAAA,W;AAoEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}