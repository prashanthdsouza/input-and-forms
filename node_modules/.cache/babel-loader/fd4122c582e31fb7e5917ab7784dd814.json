{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aroha\\\\Desktop\\\\input-and-forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsInvalid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName); // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"DnQ4F0VKeOBVVdtfOYpvhmvbYsM=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsInvalid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","enteredEmailIsValid","formSubmissionHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses","emailInputChangeHandler","emailInputBlurHandler"],"sources":["C:/Users/Aroha/Desktop/input-and-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nimport useInput from '../hooks/use-input';\r\n\r\nconst SimpleInput = (props) => {\r\n  const {\r\n    value: enteredName,\r\n    isValid: enteredNameIsValid,\r\n    hasError: nameInputHasError,\r\n    valueChangeHandler: nameChangedHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    reset: resetNameInput\r\n  } = useInput(value => value.trim() !== '');\r\n\r\n  const {\r\n    value: enteredEmail, \r\n    isValid: enteredEmailIsInvalid, \r\n    hasError: emailInputHasError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n    reset: resetEmailInput\r\n  } = useInput(value => value.includes('@'));\r\n\r\n  let formIsValid = false;\r\n\r\n  if (enteredNameIsValid && enteredEmailIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!enteredNameIsValid) {\r\n      return;\r\n    }\r\n\r\n    console.log(enteredName);\r\n\r\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\r\n    resetNameInput();\r\n    resetEmailInput();\r\n  };\r\n\r\n  const nameInputClasses = nameInputHasError\r\n    ? 'form-control invalid'\r\n    : 'form-control';\r\n\r\n  const emailInputClasses = enteredEmailIsInvalid\r\n    ? 'form-control invalid'\r\n    : 'form-control';\r\n\r\n  return (\r\n    <form onSubmit={formSubmissionHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input\r\n          type='text'\r\n          id='name'\r\n          onChange={nameChangedHandler}\r\n          onBlur={nameBlurHandler}\r\n          value={enteredName}\r\n        />\r\n        {nameInputHasError && (\r\n          <p className='error-text'>Name must not be empty.</p>\r\n        )}\r\n      </div>\r\n      <div className={emailInputClasses}>\r\n        <label htmlFor='email'>Your E-Mail</label>\r\n        <input\r\n          type='email'\r\n          id='email'\r\n          onChange={emailInputChangeHandler}\r\n          onBlur={emailInputBlurHandler}\r\n          value={enteredEmail}\r\n        />\r\n        {enteredEmailIsInvalid && (\r\n          <p className='error-text'>Please enter a valid email.</p>\r\n        )}\r\n      </div>\r\n      <div className='form-actions'>\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IACJC,KAAK,EAAEC,WADH;IAEJC,OAAO,EAAEC,kBAFL;IAGJC,QAAQ,EAAEC,iBAHN;IAIJC,kBAAkB,EAAEC,kBAJhB;IAKJC,gBAAgB,EAAEC,eALd;IAMJC,KAAK,EAAEC;EANH,IAOFd,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACY,IAAN,OAAiB,EAA3B,CAPZ;EASA,MAAM;IACJZ,KAAK,EAAEa,YADH;IAEJX,OAAO,EAAEY,qBAFL;IAGJV,QAAQ,EAAEW,kBAHN;IAIJT,kBAAkB,EAAEU,kBAJhB;IAKJR,gBAAgB,EAAES,gBALd;IAMJP,KAAK,EAAEQ;EANH,IAOFrB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACmB,QAAN,CAAe,GAAf,CAAV,CAPZ;EASA,IAAIC,WAAW,GAAG,KAAlB;;EAEA,IAAIjB,kBAAkB,IAAIkB,mBAA1B,EAA+C;IAC7CD,WAAW,GAAG,IAAd;EACD;;EAED,MAAME,qBAAqB,GAAIC,KAAD,IAAW;IACvCA,KAAK,CAACC,cAAN;;IAEA,IAAI,CAACrB,kBAAL,EAAyB;MACvB;IACD;;IAEDsB,OAAO,CAACC,GAAR,CAAYzB,WAAZ,EAPuC,CASvC;;IACAU,cAAc;IACdO,eAAe;EAChB,CAZD;;EAcA,MAAMS,gBAAgB,GAAGtB,iBAAiB,GACtC,sBADsC,GAEtC,cAFJ;EAIA,MAAMuB,iBAAiB,GAAGd,qBAAqB,GAC3C,sBAD2C,GAE3C,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEQ,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEK,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAEpB,kBAHZ;QAIE,MAAM,EAAEE,eAJV;QAKE,KAAK,EAAER;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGI,iBAAiB,iBAChB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAEuB,iBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,OADP;QAEE,EAAE,EAAC,OAFL;QAGE,QAAQ,EAAEC,uBAHZ;QAIE,MAAM,EAAEC,qBAJV;QAKE,KAAK,EAAEjB;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGC,qBAAqB,iBACpB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,eA2BE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACM,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA3BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAhFD;;GAAMtB,W;UAQAD,Q,EASAA,Q;;;KAjBAC,W;AAkFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}