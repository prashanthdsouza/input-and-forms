{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return initialInputState;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  useReducer(inputStateReducer, {});\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"/bTnfwds7tiNcfyaLuSQn4rpnA4=\");\n\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","enteredValue","setEnteredValue","useState","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"sources":["C:/Users/USER/Desktop/input-and-forms/src/hooks/use-input.js"],"sourcesContent":["import { useReducer } from 'react';\r\n\r\nconst initialInputState = {\r\n  value: '',\r\n  isTouched:false\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  return initialInputState;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n  useReducer(inputStateReducer, {})\r\n\r\n  const [enteredValue, setEnteredValue] = useState('');\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue('');\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset\r\n  };\r\n};\r\n\r\nexport default useInput;"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EADiB;EAExBC,SAAS,EAAC;AAFc,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC3C,OAAOL,iBAAP;AACD,CAFD;;AAIA,MAAMM,QAAQ,GAAIC,aAAD,IAAmB;EAAA;;EAClCR,UAAU,CAACI,iBAAD,EAAoB,EAApB,CAAV;EAEA,MAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACR,SAAD,EAAYS,YAAZ,IAA4BD,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAME,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;EACA,MAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBV,SAAlC;;EAEA,MAAMY,kBAAkB,GAAIC,KAAD,IAAW;IACpCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaf,KAAd,CAAf;EACD,CAFD;;EAIA,MAAMgB,gBAAgB,GAAIF,KAAD,IAAW;IAClCJ,YAAY,CAAC,IAAD,CAAZ;EACD,CAFD;;EAIA,MAAMO,KAAK,GAAG,MAAM;IAClBT,eAAe,CAAC,EAAD,CAAf;IACAE,YAAY,CAAC,KAAD,CAAZ;EACD,CAHD;;EAKA,OAAO;IACLV,KAAK,EAAEO,YADF;IAELW,OAAO,EAAEP,YAFJ;IAGLC,QAHK;IAILC,kBAJK;IAKLG,gBALK;IAMLC;EANK,CAAP;AAQD,CA9BD;;GAAMZ,Q;;AAgCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}