{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return initialInputState;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n\n  const inputBlurHandler = event => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","type","target","inputBlurHandler","reset","setEnteredValue","setIsTouched","enteredValue","isValid"],"sources":["C:/Users/USER/Desktop/input-and-forms/src/hooks/use-input.js"],"sourcesContent":["import { useReducer } from 'react';\r\n\r\nconst initialInputState = {\r\n  value: '',\r\n  isTouched:false\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  return initialInputState;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState)\r\n\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({type: 'INPUT', value: event.target.value});\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    dispatch({type: 'BLUR'});\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue('');\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset\r\n  };\r\n};\r\n\r\nexport default useInput;"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EADiB;EAExBC,SAAS,EAAC;AAFc,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC3C,OAAOL,iBAAP;AACD,CAFD;;AAIA,MAAMM,QAAQ,GAAIC,aAAD,IAAmB;EAAA;;EAClC,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,UAAU,CAACI,iBAAD,EAAoBH,iBAApB,CAAzC;EAEA,MAAMU,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACP,KAAZ,CAAlC;EACA,MAAMU,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACN,SAA7C;;EAEA,MAAMU,kBAAkB,GAAIC,KAAD,IAAW;IACpCJ,QAAQ,CAAC;MAACK,IAAI,EAAE,OAAP;MAAgBb,KAAK,EAAEY,KAAK,CAACE,MAAN,CAAad;IAApC,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMe,gBAAgB,GAAIH,KAAD,IAAW;IAClCJ,QAAQ,CAAC;MAACK,IAAI,EAAE;IAAP,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMG,KAAK,GAAG,MAAM;IAClBC,eAAe,CAAC,EAAD,CAAf;IACAC,YAAY,CAAC,KAAD,CAAZ;EACD,CAHD;;EAKA,OAAO;IACLlB,KAAK,EAAEmB,YADF;IAELC,OAAO,EAAEX,YAFJ;IAGLC,QAHK;IAILC,kBAJK;IAKLI,gBALK;IAMLC;EANK,CAAP;AAQD,CA3BD;;GAAMX,Q;;AA6BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}